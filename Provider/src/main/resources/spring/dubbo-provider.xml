<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd  
  http://code.alibabatech.com/schema/dubbo
  http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 生产者 -->
    <dubbo:application name="provider" />
    <!-- 使用zookeeper注册中心暴露服务地址 -->
    <!--

    说明：

       dubbo:registry 标签一些属性的说明：

          1）register是否向此注册中心注册服务，如果设为false，将只订阅，不注册。

          2）check注册中心不存在时，是否报错。

          3）subscribe是否向此注册中心订阅服务，如果设为false，将只注册，不订阅。

          4）timeout注册中心请求超时时间(毫秒)。

          5）address可以Zookeeper集群配置，地址可以多个以逗号隔开等。

      dubbo:service标签的一些属性说明：

         1）interface服务接口的路径

         2）ref引用对应的实现类的Bean的ID

         3）registry向指定注册中心注册，在多个注册中心时使用，值为<dubbo:registry>的id属性，多个注册中心ID用逗号分隔，如果不想将该服务注册到任何registry，可将值设为N/A

         4）register 默认true ，该协议的服务是否注册到注册中心。

    -->
    <dubbo:registry  protocol="zookeeper" address="zookeeper://127.0.0.1:2181" id="my"/>

    <!--协议配置，用于配置提供服务的协议信息，协议由提供方指定，消费方被动接受。-->
    <dubbo:protocol name="dubbo" port="20801" dispatcher="all" threadpool="fixed" accepts="500" threads="100" />

    <!-- 声明需要暴露的服务接口 -->
    <dubbo:provider delay="-1" timeout="10000" retries="0"/><!-- 全局超时,重试机制 -->
    <dubbo:service interface="com.jlu.cloudnote.service.BookService" ref="bookService" />
    <dubbo:service interface="com.jlu.cloudnote.service.NoteService" ref="noteService" />
    <dubbo:service interface="com.jlu.cloudnote.service.UserService" ref="userService" />

</beans>




